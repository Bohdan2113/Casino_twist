// –ü–µ—Ä–µ–º–∏–∫–∞—á —Ñ–æ—Ä–º
const loginFormDiv = document.getElementById("login-form");
const registerFormDiv = document.getElementById("register-form");

document.getElementById("show-register").addEventListener("click", (e) => {
  e.preventDefault();
  loginFormDiv.style.display = "none";
  registerFormDiv.style.display = "block";
  clearMessages();
});

document.getElementById("show-login").addEventListener("click", (e) => {
  e.preventDefault();
  registerFormDiv.style.display = "none";
  loginFormDiv.style.display = "block";
  clearMessages();
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É/–ø—Ä–∏—Ö–æ–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è –¥–ª—è –±—É–¥—å-—è–∫–æ—ó —Ñ–æ—Ä–º–∏
function setupTogglePassword(formDiv) {
  const toggleBtns = formDiv.querySelectorAll(".toggle-password");
  toggleBtns.forEach((btn) => {
    btn.addEventListener("click", () => {
      const input = btn.previousElementSibling;
      if (input.type === "password") {
        input.type = "text";
        btn.textContent = "üôà";
        btn.setAttribute("aria-label", "–°—Ö–æ–≤–∞—Ç–∏ –ø–∞—Ä–æ–ª—å");
      } else {
        input.type = "password";
        btn.textContent = "üëÅÔ∏è";
        btn.setAttribute("aria-label", "–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–∞—Ä–æ–ª—å");
      }
    });
  });
}
setupTogglePassword(loginFormDiv);
setupTogglePassword(registerFormDiv);

// –ï–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
function createMessageElem(formDiv) {
  let elem = formDiv.querySelector(".message");
  if (!elem) {
    elem = document.createElement("p");
    elem.className = "message";
    elem.style.textAlign = "center";
    elem.style.marginTop = "1rem";
    elem.style.fontWeight = "bold";
    elem.style.color = "red";
    formDiv.querySelector("form").appendChild(elem);
  }
  return elem;
}

function clearMessages() {
  [loginFormDiv, registerFormDiv].forEach((div) => {
    const msg = div.querySelector(".message");
    if (msg) msg.textContent = "";
    div.querySelector("form").reset();
  });
}

// –û–±—Ä–æ–±–∫–∞ submit –ª–æ–≥—ñ–Ω—É
loginFormDiv.querySelector("form").addEventListener("submit", async (e) => {
  e.preventDefault();
  const msg = createMessageElem(loginFormDiv);
  msg.style.color = "red";
  msg.textContent = "";

  const username = loginFormDiv.querySelector("#login-username").value.trim();
  const password = loginFormDiv.querySelector("#login-password").value.trim();

  if (!username || !password) {
    msg.textContent = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –ø–∞—Ä–æ–ª—å.";
    return;
  }

  try {
    const res = await fetch("/api/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, password }),
    });
    const data = await res.json();

    if (!res.ok) {
      msg.textContent = data.message || "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ.";
      return;
    }

    msg.style.color = "limegreen";
    msg.textContent = data.message || "–í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π!";

    if (data.accessToken) {
      localStorage.setItem("accessToken", data.accessToken);
      window.location.href = "/user.html";
    }
  } catch {
    msg.textContent = "–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
  }
});

// –û–±—Ä–æ–±–∫–∞ submit —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
registerFormDiv.querySelector("form").addEventListener("submit", async (e) => {
  e.preventDefault();
  const msg = createMessageElem(registerFormDiv);
  msg.style.color = "red";
  msg.textContent = "";

  const username = registerFormDiv
    .querySelector("#register-username")
    .value.trim();
  const password = registerFormDiv
    .querySelector("#register-password")
    .value.trim();

  if (!username || !password) {
    msg.textContent = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –ø–∞—Ä–æ–ª—å.";
    return;
  }

  try {
    const res = await fetch("/api/auth/register", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, password }),
    });
    const data = await res.json();

    if (!res.ok) {
      msg.textContent = data.message || "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.";
      return;
    }

    msg.style.color = "limegreen";
    msg.textContent = data.message || "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –¢–µ–ø–µ—Ä —É–≤—ñ–π–¥—ñ—Ç—å.";

    if (data.accessToken) {
      localStorage.setItem("accessToken", data.accessToken);
      window.location.href = "/user.html";
    }
    setTimeout(() => {
      registerFormDiv.style.display = "none";
      loginFormDiv.style.display = "block";
      clearMessages();
    }, 200);
  } catch {
    msg.textContent = "–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
  }
});
